name: CI

on:
  pull_request:
    branches: ["main"]
    types: [closed, opened, synchronize, reopened]
  issue_comment:
    types: [created]
    if: contains(github.event.comment.body, 'digger')
  workflow_dispatch:

jobs:
  staging:
    if: (contains(github.event.comment.body, 'digger') && contains(github.event.comment.body, 'staging')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: digger run
        uses: AppliNH/digger@fix/custom-digger-filename
        with:
          setup-aws: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          setup-terraform: true
          digger-filename: digger-staging.yml
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  production:
    if: (contains(github.event.comment.body, 'digger') && contains(github.event.comment.body, 'production')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: digger run
        uses: AppliNH/digger@fix/custom-digger-filename
        with:
          setup-aws: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          setup-terraform: true
          digger-filename: digger-production.yml
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
